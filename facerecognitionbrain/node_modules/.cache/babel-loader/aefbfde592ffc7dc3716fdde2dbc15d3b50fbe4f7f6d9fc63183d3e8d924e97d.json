{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natha\\\\OneDrive\\\\Escritorio\\\\ZTM\\\\Final project\\\\facerecognitionbrain\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './App.css';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport { useEffect, useMemo, useState } from \"react\";\nimport Particles, { initParticlesEngine } from \"@tsparticles/react\";\nimport { loadSlim } from \"@tsparticles/slim\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst properties = {\n  background: {\n    color: {\n      value: \"\" //\"#0d47a1\",\n    }\n  },\n  fpsLimit: 120,\n  interactivity: {\n    events: {\n      onClick: {\n        enable: true,\n        mode: \"push\"\n      },\n      onHover: {\n        enable: true,\n        mode: \"repulse\"\n      }\n    },\n    modes: {\n      push: {\n        quantity: 4\n      },\n      repulse: {\n        distance: 200,\n        duration: 0.4\n      }\n    }\n  },\n  particles: {\n    color: {\n      value: \"#ffffff\"\n    },\n    links: {\n      color: \"#ffffff\",\n      distance: 150,\n      enable: true,\n      opacity: 0.5,\n      width: 1\n    },\n    move: {\n      direction: \"none\",\n      enable: true,\n      outModes: {\n        default: \"bounce\"\n      },\n      random: false,\n      speed: 6,\n      straight: false\n    },\n    number: {\n      density: {\n        enable: true\n      },\n      value: 80\n    },\n    opacity: {\n      value: 0.5\n    },\n    shape: {\n      type: \"circle\"\n    },\n    size: {\n      value: {\n        min: 1,\n        max: 5\n      }\n    }\n  },\n  detectRetina: true\n};\nfunction App() {\n  _s();\n  const [init, setInit] = useState(false);\n\n  // this should be run only once per application lifetime\n  useEffect(() => {\n    initParticlesEngine(async engine => {\n      await loadSlim(engine);\n    }).then(() => {\n      setInit(true);\n    });\n  }, []);\n  const particlesLoaded = container => {\n    console.log(container);\n  };\n  const options = useMemo(() => ({\n    properties\n    // your particle options go here\n  }), []);\n  if (init) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        id: \"tsparticles\",\n        particlesLoaded: particlesLoaded,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(App, \"eB+NWpxmGZSqHQDaTSx/Qv0E/5M=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Navigation","Logo","ImageLinkForm","Rank","useEffect","useMemo","useState","Particles","initParticlesEngine","loadSlim","jsxDEV","_jsxDEV","Fragment","_Fragment","properties","background","color","value","fpsLimit","interactivity","events","onClick","enable","mode","onHover","modes","push","quantity","repulse","distance","duration","particles","links","opacity","width","move","direction","outModes","default","random","speed","straight","number","density","shape","type","size","min","max","detectRetina","App","_s","init","setInit","engine","then","particlesLoaded","container","console","log","options","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/natha/OneDrive/Escritorio/ZTM/Final project/facerecognitionbrain/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport { useEffect, useMemo, useState } from \"react\";\nimport Particles, { initParticlesEngine } from \"@tsparticles/react\";\nimport { loadSlim } from \"@tsparticles/slim\";\n\nconst properties={background: {\n  color: {\n    value: \"\"//\"#0d47a1\",\n  },\n},\nfpsLimit: 120,\ninteractivity: {\n  events: {\n    onClick: {\n      enable: true,\n      mode: \"push\",\n    },\n    onHover: {\n      enable: true,\n      mode: \"repulse\",\n    },\n  },\n  modes: {\n    push: {\n      quantity: 4,\n    },\n    repulse: {\n      distance: 200,\n      duration: 0.4,\n    },\n  },\n},\nparticles: {\n  color: {\n    value: \"#ffffff\",\n  },\n  links: {\n    color: \"#ffffff\",\n    distance: 150,\n    enable: true,\n    opacity: 0.5,\n    width: 1,\n  },\n  move: {\n    direction: \"none\",\n    enable: true,\n    outModes: {\n      default: \"bounce\",\n    },\n    random: false,\n    speed: 6,\n    straight: false,\n  },\n  number: {\n    density: {\n      enable: true,\n    },\n    value: 80,\n  },\n  opacity: {\n    value: 0.5,\n  },\n  shape: {\n    type: \"circle\",\n  },\n  size: {\n    value: { min: 1, max: 5 },\n  },\n},\ndetectRetina: true}\n\n\nfunction App() {\n\n    const [init, setInit] = useState(false);\n  \n    // this should be run only once per application lifetime\n    useEffect(() => {\n      initParticlesEngine(async (engine) => {\n        await loadSlim(engine);\n      }).then(() => {\n        setInit(true);\n      });\n    }, []);\n  \n    const particlesLoaded = (container) => {\n      console.log(container);\n    };\n  \n    const options = useMemo(\n      () => ({properties\n        // your particle options go here\n        \n}),\n      []\n    );\n  \n    if (init) {\n      return (\n        <div className=\"App\">\n          <Particles className='particles'\n            id=\"tsparticles\"\n            particlesLoaded={particlesLoaded}\n            options={options}\n          />\n          <Navigation />\n          <Logo />\n          <ImageLinkForm />\n          <Rank />\n        </div>\n      );\n    }\n  \n    return <></>;\n  };\n\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}