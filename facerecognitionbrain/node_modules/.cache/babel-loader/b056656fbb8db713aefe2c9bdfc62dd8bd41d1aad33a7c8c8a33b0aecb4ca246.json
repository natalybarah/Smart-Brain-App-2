{"ast":null,"code":"import React,{Component}from'react';import'./App.css';//import Clarifai from 'clarifai';\nimport FaceRecognition from'./Components/FaceRecognition/FaceRecognition';import Navigation from'./Components/Navigation/Navigation';import Logo from'./Components/Logo/Logo';import ImageLinkForm from'./Components/ImageLinkForm/ImageLinkForm';import Rank from'./Components/Rank/Rank';import Signin from'./Components/Signin/Signin';import Register from'./Components/Register/Register';import AppParticles from'./Components/Particles/Particles';//import { useEffect, useMemo, useState } from \"react\";\n//import Particles, { initParticlesEngine } from \"@tsparticles/react\";\n//import { loadSlim } from \"@tsparticles/slim\";\n//NIUEVO//\n//const app = new Clarifai.App({\n//apiKey: 'da25080a0f594fbfb117ffb83bcaaf1b'\n//});\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// In this section, we set the user authentication, user and app ID, model details, and the URL\n// of the image we want as an input. Change these strings to run your own example.\n//////////////////////////////////////////////////////////////////////////////////////////////////\n// Your PAT (Personal Access Token) can be found in the Account's Security section\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const returnClarifaiRequestOptions=imageUrl=>{const PAT='21667652913c4147be6abf57dbb3ea9c';// Specify the correct user_id/app_id pairings\n// Since you're making inferences outside your app's scope\nconst USER_ID='natalykodes';const APP_ID='test';// Change these to whatever model and image URL you want to use\nconst MODEL_ID='face-detection';const IMAGE_URL=imageUrl;const raw=JSON.stringify({\"user_app_id\":{\"user_id\":USER_ID,\"app_id\":APP_ID},\"inputs\":[{\"data\":{\"image\":{\"url\":IMAGE_URL}}}]});const requestOptions={method:'POST',headers:{'Accept':'application/json','Authorization':'Key '+PAT},body:raw};return requestOptions;};//ANTERIOR//\nconst initialState={input:'',imageUrl:'',box:{},route:'Signin',isSignedIn:false,user:{id:\"\",name:'',email:'',password:'',entries:'0',joined:''}};class App extends Component{constructor(){super();this.loadUser=data=>{this.setState({user:{id:data.id,name:data.name,email:data.email,password:data.password,entries:data.entries,joined:data.joined}});};this.calculateFaceLocation=data=>{const clarifaiFace=data.outputs[0].data.regions[0].region_info.bounding_box;const image=document.getElementById('inputImage');const width=Number(image.width);const height=Number(image.height);console.log(width,height);return{leftCol:clarifaiFace.left_col*width,topRow:clarifaiFace.top_row*height,rightCol:width-clarifaiFace.right_col*width,bottomRow:height-clarifaiFace.bottom_row*height};};this.displayFaceBox=box=>{console.log(box);this.setState({box:box});};this.onInputChange=event=>{this.setState({input:event.target.value});};//ESTE ES ES EL NUEVO\n//new new\nthis.onButtonSubmit=()=>{this.setState({imageUrl:this.state.input});fetch(\"https://api.clarifai.com/v2/models/\"+'face-detection'+\"/outputs\",returnClarifaiRequestOptions(this.state.input)).then(response=>response.json()).then(response=>{console.log(\"hi\",response);if(response){fetch('http://localhost:1000/image',{method:'put',headers:{'Content-type':'application/json'},body:JSON.stringify({id:this.state.user.id})}).then(response=>response.json()).then(count=>{this.setState(Object.assign(this.state.user,{entries:count}));}).catch(console.log);}this.displayFaceBox(this.calculateFaceLocation(response));}).catch(err=>console.log(err));};/*onButtonSubmit= ()=>{\n  this.setState({imageUrl: this.state.input});\n  //app.models.predict('face-detection', this.state.input)\n  \n  fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' + \"/outputs\", returnClarifaiRequestOptions(this.state.input))\n      .then(response => response.json())\n      .then(response=>{ //here is the other missing parenthesis\n        console.log(\"hi\", response)\n        if (response){\n          fetch('http://localhost:3000/image',{\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n              })\n          })\n        .then(response=>response.json())\n        //.then(response=>this.displayFaceBox(this.calculateFaceLocation(response)))\n        //.catch(err=>console.log(err)); \n      .then(count=>{\n        this.setState(Object.assign(this.state.user,{entries:count}))\n      })\n    }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n      .catch(err=>console.log(err)); \n      } */this.onRouteChange=route=>{if(route==='signout'){this.setState(initialState);}else if(route==='home'){this.setState({isSignedIn:true});}this.setState({route:route});//CHAT antes \"route\"\n};this.state=initialState;}/*onButtonSubmit= ()=>{ ESTE ES EL MIO\n    this.setState({imageUrl: this.state.input});\n    //app.models.predict('face-detection', this.state.input)\n    \n    fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' + \"/outputs\", returnClarifaiRequestOptions(this.state.input))\n        .then(response => response.json())\n        .then(response=>this.displayFaceBox(this.calculateFaceLocation(response)))\n        .catch(err=>console.log(err)); \n  }\n  onRouteChange= (route)=>{\n    if(route==='signout'){\n      this.setState({isSignedIn: false})\n    } else if (route=== 'home'){\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route}); //CHAT antes \"route\"\n  }*/render(){const{isSignedIn,imageUrl,route,box}=this.state;return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(AppParticles,{className:\"particles\"//id=\"tsparticles\"\n//particlesLoaded={particlesLoaded}\n//options={particleOptions}\n}),/*#__PURE__*/_jsx(Navigation,{isSignedIn:isSignedIn,onRouteChange:this.onRouteChange}),route==='home'?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Logo,{}),/*#__PURE__*/_jsx(ImageLinkForm,{onInputChange:this.onInputChange,onButtonSubmit:this.onButtonSubmit}),/*#__PURE__*/_jsx(Rank,{name:this.state.user.name,entries:this.state.user.entries}),/*#__PURE__*/_jsx(FaceRecognition,{box:box,imageUrl:imageUrl})]}):route==='Signin'?/*#__PURE__*/_jsx(Signin,{loadUser:this.loadUser,onRouteChange:this.onRouteChange})//chat antes this.setState.\n:/*#__PURE__*/_jsx(Register,{loadUser:this.loadUser,onRouteChange:this.onRouteChange})]});}};export default App;","map":{"version":3,"names":["React","Component","FaceRecognition","Navigation","Logo","ImageLinkForm","Rank","Signin","Register","AppParticles","jsx","_jsx","jsxs","_jsxs","returnClarifaiRequestOptions","imageUrl","PAT","USER_ID","APP_ID","MODEL_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","initialState","input","box","route","isSignedIn","user","id","name","email","password","entries","joined","App","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","console","log","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","value","onButtonSubmit","state","fetch","then","response","json","count","Object","assign","catch","err","onRouteChange","render","className","children"],"sources":["C:/Users/natha/OneDrive/Escritorio/ZTM/final project version 2/Smart-brain-app-2/facerecognitionbrain/src/App.js"],"sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n//import Clarifai from 'clarifai';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition'\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport Signin from './Components/Signin/Signin'\nimport Register from './Components/Register/Register'\n\nimport AppParticles from './Components/Particles/Particles';\n//import { useEffect, useMemo, useState } from \"react\";\n//import Particles, { initParticlesEngine } from \"@tsparticles/react\";\n//import { loadSlim } from \"@tsparticles/slim\";\n//NIUEVO//\n//const app = new Clarifai.App({\n  //apiKey: 'da25080a0f594fbfb117ffb83bcaaf1b'\n //});\n ///////////////////////////////////////////////////////////////////////////////////////////////////\n    // In this section, we set the user authentication, user and app ID, model details, and the URL\n    // of the image we want as an input. Change these strings to run your own example.\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    // Your PAT (Personal Access Token) can be found in the Account's Security section\n  const returnClarifaiRequestOptions= (imageUrl)=>{\n    const PAT = '21667652913c4147be6abf57dbb3ea9c';\n    // Specify the correct user_id/app_id pairings\n    // Since you're making inferences outside your app's scope\n    const USER_ID = 'natalykodes';       \n    const APP_ID = 'test';\n    // Change these to whatever model and image URL you want to use\n    const MODEL_ID = 'face-detection';\n    \n    const IMAGE_URL = imageUrl; \n    const raw = JSON.stringify({\n      \"user_app_id\": {\n          \"user_id\": USER_ID,\n          \"app_id\": APP_ID\n      },\n      \"inputs\": [\n          {\n              \"data\": {\n                  \"image\": {\n                      \"url\": IMAGE_URL\n                  }\n              }\n          }\n      ]\n  });\n const requestOptions = {\n    method: 'POST',\n    headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key ' + PAT\n    },\n    body: raw\n};\n  return requestOptions\n  }\n\n\n        //ANTERIOR//\nconst initialState={\n    input: '',\n    imageUrl: '',\n    box: {},\n    route: 'Signin',\n    isSignedIn: false,\n    user:{\n      id: \"\",\n      name: '',\n      email: '',\n      password: '',\n      entries: '0',\n      joined: ''\n    }\n  }\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state= initialState\n  }\n\n  loadUser=(data)=>{\n    this.setState({user:{\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      password: data.password,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n  calculateFaceLocation =(data)=>{\n    const clarifaiFace= data.outputs[0].data.regions[0].region_info.bounding_box\n    const image= document.getElementById('inputImage');\n    const width= Number(image.width);\n    const height= Number(image.height);\n    console.log(width, height);\n    return{\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n\n\n  displayFaceBox= (box)=>{\n    console.log(box);\n    this.setState({box: box})\n  }\n\n  onInputChange= (event)=>{\n    this.setState({input: event.target.value})\n  }\n//ESTE ES ES EL NUEVO\n//new new\nonButtonSubmit = () => {\n  this.setState({ imageUrl: this.state.input });\n\n  fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' + \"/outputs\", returnClarifaiRequestOptions(this.state.input))\n    .then(response => response.json())\n    .then(response => {\n      console.log(\"hi\", response);\n      if (response) {\n        fetch('http://localhost:1000/image', { \n          method: 'put',\n          headers: {'Content-type': 'application/json'},\n          body: JSON.stringify({\n              id: this.state.user.id\n        })\n      })\n        .then(response=>response.json())\n        .then(count=>{\n          this.setState(Object.assign(this.state.user, {entries:count}))\n          })\n          .catch(console.log)\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      \n    })\n    .catch(err => console.log(err));\n};\n/*onButtonSubmit= ()=>{\n  this.setState({imageUrl: this.state.input});\n  //app.models.predict('face-detection', this.state.input)\n  \n  fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' + \"/outputs\", returnClarifaiRequestOptions(this.state.input))\n      .then(response => response.json())\n      .then(response=>{ //here is the other missing parenthesis\n        console.log(\"hi\", response)\n        if (response){\n          fetch('http://localhost:3000/image',{\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n              })\n          })\n        .then(response=>response.json())\n        //.then(response=>this.displayFaceBox(this.calculateFaceLocation(response)))\n        //.catch(err=>console.log(err)); \n      .then(count=>{\n        this.setState(Object.assign(this.state.user,{entries:count}))\n      })\n    }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n      .catch(err=>console.log(err)); \n      } */ \n\nonRouteChange= (route)=>{\n  if(route==='signout'){\n    this.setState(initialState)\n  } else if (route=== 'home'){\n    this.setState({isSignedIn: true})\n  }\n  this.setState({route: route}); //CHAT antes \"route\"\n}\n\n\n\n  /*onButtonSubmit= ()=>{ ESTE ES EL MIO\n    this.setState({imageUrl: this.state.input});\n    //app.models.predict('face-detection', this.state.input)\n    \n    fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' + \"/outputs\", returnClarifaiRequestOptions(this.state.input))\n        .then(response => response.json())\n        .then(response=>this.displayFaceBox(this.calculateFaceLocation(response)))\n        .catch(err=>console.log(err)); \n  }\n  onRouteChange= (route)=>{\n    if(route==='signout'){\n      this.setState({isSignedIn: false})\n    } else if (route=== 'home'){\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route}); //CHAT antes \"route\"\n  }*/\n   render(){\n    const {isSignedIn, imageUrl, route, box}= this.state\n      return (\n        <div className=\"App\">\n          <AppParticles className='particles'\n            //id=\"tsparticles\"\n            //particlesLoaded={particlesLoaded}\n            //options={particleOptions}\n          />\n    \n          <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n          { route === 'home' \n            ? \n            <div><Logo />\n                  <ImageLinkForm \n                  onInputChange={this.onInputChange} \n                  onButtonSubmit={this.onButtonSubmit}/>\n                  <Rank name={this.state.user.name} entries={this.state.user.entries}      />\n                  <FaceRecognition box={box} imageUrl={imageUrl}/>\n          </div>\n            : (\n              route === 'Signin' \n              ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> //chat antes this.setState.\n              : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            ) \n          }\n        </div>\n      );\n    }\n      \n    \n  };\n\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}