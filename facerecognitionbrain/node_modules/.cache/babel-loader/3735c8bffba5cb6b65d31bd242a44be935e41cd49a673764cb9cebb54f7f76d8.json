{"ast":null,"code":"import{useEffect,useState}from\"react\";import Particles,{initParticlesEngine}from\"@tsparticles/react\";// import { loadAll } from \"@/tsparticles/all\"; // if you are going to use `loadAll`, install the \"@tsparticles/all\" package too.\n// import { loadFull } from \"tsparticles\"; // if you are going to use `loadFull`, install the \"tsparticles\" package too.\nimport{loadSlim}from\"@tsparticles/slim\";// if you are going to use `loadSlim`, install the \"@tsparticles/slim\" package too.\n// import { loadBasic } from \"@tsparticles/basic\"; // if you are going to use `loadBasic`, install the \"@tsparticles/basic\" package too.\nimport{jsx as _jsx}from\"react/jsx-runtime\";const AppParticles=()=>{const[init,setInit]=useState(false);// this should be run only once per application lifetime\nuseEffect(()=>{initParticlesEngine(async engine=>{// you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n// this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n// starting from v2 you can add only the features you need reducing the bundle size\n//await loadAll(engine);\n//await loadFull(engine);\nawait loadSlim(engine);//await loadBasic(engine);\n}).then(()=>{setInit(true);});},[]);const particlesLoaded=container=>{console.log(container);};return init&&/*#__PURE__*/_jsx(Particles,{className:\"particles\",id:\"tsparticles\",particlesLoaded:particlesLoaded,options:{background:{color:{value:\"linear-gradient(0deg, rgba(34,167,195,1) 30%, rgba(223,45,253,1) 76%, rgba(253,187,45,1) 96%, rgba(253,187,45,1) 96%);\"}},fpsLimit:120,interactivity:{events:{onClick:{enable:true,mode:\"push\"},onHover:{enable:true,mode:\"repulse\"},resize:true},modes:{push:{quantity:4},repulse:{distance:200,duration:0.4}}},particles:{color:{value:\"#ffffff\"},links:{color:\"#ffffff\",distance:150,enable:true,opacity:0.5,width:1},move:{direction:\"none\",enable:true,outModes:{default:\"bounce\"},random:false,speed:6,straight:false},number:{density:{enable:true,area:800},value:80},opacity:{value:0.5},shape:{type:\"circle\"},size:{value:{min:1,max:5}}},detectRetina:true}});};export default AppParticles;","map":{"version":3,"names":["useEffect","useState","Particles","initParticlesEngine","loadSlim","jsx","_jsx","AppParticles","init","setInit","engine","then","particlesLoaded","container","console","log","className","id","options","background","color","value","fpsLimit","interactivity","events","onClick","enable","mode","onHover","resize","modes","push","quantity","repulse","distance","duration","particles","links","opacity","width","move","direction","outModes","default","random","speed","straight","number","density","area","shape","type","size","min","max","detectRetina"],"sources":["C:/Users/natha/OneDrive/Escritorio/ZTM/final project version 2/Smart-brain-app-2/facerecognitionbrain/src/Components/Particles/Particles.js"],"sourcesContent":["import {  useEffect, useState } from \"react\";\r\nimport Particles, { initParticlesEngine } from \"@tsparticles/react\";\r\n// import { loadAll } from \"@/tsparticles/all\"; // if you are going to use `loadAll`, install the \"@tsparticles/all\" package too.\r\n// import { loadFull } from \"tsparticles\"; // if you are going to use `loadFull`, install the \"tsparticles\" package too.\r\nimport { loadSlim } from \"@tsparticles/slim\"; // if you are going to use `loadSlim`, install the \"@tsparticles/slim\" package too.\r\n// import { loadBasic } from \"@tsparticles/basic\"; // if you are going to use `loadBasic`, install the \"@tsparticles/basic\" package too.\r\n\r\nconst AppParticles = () => {\r\n    const [ init, setInit ] = useState(false);\r\n\r\n    // this should be run only once per application lifetime\r\n    useEffect(() => {\r\n        initParticlesEngine(async (engine) => {\r\n            // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\r\n            // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\r\n            // starting from v2 you can add only the features you need reducing the bundle size\r\n            //await loadAll(engine);\r\n            //await loadFull(engine);\r\n            await loadSlim(engine);\r\n            //await loadBasic(engine);\r\n        }).then(() => {\r\n            setInit(true);\r\n        });\r\n    }, []);\r\n\r\n    const particlesLoaded = (container) => {\r\n        console.log(container);\r\n    };\r\n\r\n    return (\r\n        init && <Particles\r\n            className= 'particles'\r\n            id=\"tsparticles\"\r\n            particlesLoaded={particlesLoaded}\r\n            options={{\r\n                background: {\r\n                    color: {\r\n                        value: \"linear-gradient(0deg, rgba(34,167,195,1) 30%, rgba(223,45,253,1) 76%, rgba(253,187,45,1) 96%, rgba(253,187,45,1) 96%);\",\r\n                    },\r\n                },\r\n                fpsLimit: 120,\r\n                interactivity: {\r\n                    events: {\r\n                        onClick: {\r\n                            enable: true,\r\n                            mode: \"push\",\r\n                        },\r\n                        onHover: {\r\n                            enable: true,\r\n                            mode: \"repulse\",\r\n                        },\r\n                        resize: true,\r\n                    },\r\n                    modes: {\r\n                        push: {\r\n                            quantity: 4,\r\n                        },\r\n                        repulse: {\r\n                            distance: 200,\r\n                            duration: 0.4,\r\n                        },\r\n                    },\r\n                },\r\n                particles: {\r\n                    color: {\r\n                        value: \"#ffffff\",\r\n                    },\r\n                    links: {\r\n                        color: \"#ffffff\",\r\n                        distance: 150,\r\n                        enable: true,\r\n                        opacity: 0.5,\r\n                        width: 1,\r\n                    },\r\n                    move: {\r\n                        direction: \"none\",\r\n                        enable: true,\r\n                        outModes: {\r\n                            default: \"bounce\",\r\n                        },\r\n                        random: false,\r\n                        speed: 6,\r\n                        straight: false,\r\n                    },\r\n                    number: {\r\n                        density: {\r\n                            enable: true,\r\n                            area: 800,\r\n                        },\r\n                        value: 80,\r\n                    },\r\n                    opacity: {\r\n                        value: 0.5,\r\n                    },\r\n                    shape: {\r\n                        type: \"circle\",\r\n                    },\r\n                    size: {\r\n                        value: { min: 1, max: 5 },\r\n                    },\r\n                },\r\n                detectRetina: true,\r\n            }}\r\n        />\r\n        \r\n    );\r\n};\r\n\r\nexport default AppParticles;"],"mappings":"AAAA,OAAUA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC5C,MAAO,CAAAC,SAAS,EAAIC,mBAAmB,KAAQ,oBAAoB,CACnE;AACA;AACA,OAASC,QAAQ,KAAQ,mBAAmB,CAAE;AAC9C;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAEA,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACvB,KAAM,CAAEC,IAAI,CAAEC,OAAO,CAAE,CAAGR,QAAQ,CAAC,KAAK,CAAC,CAEzC;AACAD,SAAS,CAAC,IAAM,CACZG,mBAAmB,CAAC,KAAO,CAAAO,MAAM,EAAK,CAClC;AACA;AACA;AACA;AACA;AACA,KAAM,CAAAN,QAAQ,CAACM,MAAM,CAAC,CACtB;AACJ,CAAC,CAAC,CAACC,IAAI,CAAC,IAAM,CACVF,OAAO,CAAC,IAAI,CAAC,CACjB,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAG,eAAe,CAAIC,SAAS,EAAK,CACnCC,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC,CAC1B,CAAC,CAED,MACI,CAAAL,IAAI,eAAIF,IAAA,CAACJ,SAAS,EACdc,SAAS,CAAE,WAAW,CACtBC,EAAE,CAAC,aAAa,CAChBL,eAAe,CAAEA,eAAgB,CACjCM,OAAO,CAAE,CACLC,UAAU,CAAE,CACRC,KAAK,CAAE,CACHC,KAAK,CAAE,wHACX,CACJ,CAAC,CACDC,QAAQ,CAAE,GAAG,CACbC,aAAa,CAAE,CACXC,MAAM,CAAE,CACJC,OAAO,CAAE,CACLC,MAAM,CAAE,IAAI,CACZC,IAAI,CAAE,MACV,CAAC,CACDC,OAAO,CAAE,CACLF,MAAM,CAAE,IAAI,CACZC,IAAI,CAAE,SACV,CAAC,CACDE,MAAM,CAAE,IACZ,CAAC,CACDC,KAAK,CAAE,CACHC,IAAI,CAAE,CACFC,QAAQ,CAAE,CACd,CAAC,CACDC,OAAO,CAAE,CACLC,QAAQ,CAAE,GAAG,CACbC,QAAQ,CAAE,GACd,CACJ,CACJ,CAAC,CACDC,SAAS,CAAE,CACPhB,KAAK,CAAE,CACHC,KAAK,CAAE,SACX,CAAC,CACDgB,KAAK,CAAE,CACHjB,KAAK,CAAE,SAAS,CAChBc,QAAQ,CAAE,GAAG,CACbR,MAAM,CAAE,IAAI,CACZY,OAAO,CAAE,GAAG,CACZC,KAAK,CAAE,CACX,CAAC,CACDC,IAAI,CAAE,CACFC,SAAS,CAAE,MAAM,CACjBf,MAAM,CAAE,IAAI,CACZgB,QAAQ,CAAE,CACNC,OAAO,CAAE,QACb,CAAC,CACDC,MAAM,CAAE,KAAK,CACbC,KAAK,CAAE,CAAC,CACRC,QAAQ,CAAE,KACd,CAAC,CACDC,MAAM,CAAE,CACJC,OAAO,CAAE,CACLtB,MAAM,CAAE,IAAI,CACZuB,IAAI,CAAE,GACV,CAAC,CACD5B,KAAK,CAAE,EACX,CAAC,CACDiB,OAAO,CAAE,CACLjB,KAAK,CAAE,GACX,CAAC,CACD6B,KAAK,CAAE,CACHC,IAAI,CAAE,QACV,CAAC,CACDC,IAAI,CAAE,CACF/B,KAAK,CAAE,CAAEgC,GAAG,CAAE,CAAC,CAAEC,GAAG,CAAE,CAAE,CAC5B,CACJ,CAAC,CACDC,YAAY,CAAE,IAClB,CAAE,CACL,CAAC,CAGV,CAAC,CAED,cAAe,CAAAhD,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}